security:
    password_hashers:
        App\Entity\AdminUser:
            algorithm: auto

    providers:
        admin_user_provider:
            entity:
                class: App\Entity\AdminUser
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: 
            
        api:
            pattern: ^/api
            stateless: true
            provider: admin_user_provider
            jwt: ~

    access_control:
        # üîì Rotas p√∫blicas
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/docs, roles: PUBLIC_ACCESS }
        - { path: ^/api/entrypoints, roles: PUBLIC_ACCESS }
        - { path: ^/api/swagger, roles: PUBLIC_ACCESS }
        - { path: ^/api/swagger.json, roles: PUBLIC_ACCESS }
        - { path: ^/api/.well-known, roles: PUBLIC_ACCESS }
        - { path: ^/api/contexts, roles: PUBLIC_ACCESS }
        - { path: ^/api$, roles: PUBLIC_ACCESS }

        # üîê Qualquer outra rota `/api/**` precisa de autentica√ß√£o
        - { path: ^/api, roles: ROLE_ADMIN }
